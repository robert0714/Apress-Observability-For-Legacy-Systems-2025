version: '3'
services:
  server-service:
    build:
      args:
        GRADLE_PROJECT: :server
        PROJECT_PATH: server
    container_name: server-service
    image: server-service
    environment:
      OTEL_SERVICE_NAME: "server-service"
      OTEL_RESOURCE_ATTRIBUTES: "service=server-service,env=dev"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4317"
      # Logs are disabled by default
      OTEL_LOGS_EXPORTER: "otlp"
    ports:
      - "8082:8080"
    depends_on:
      - collector

  client-service:
    build:
      args:
        GRADLE_PROJECT: :client
        PROJECT_PATH: client
    container_name: client-service
    image: client-service
    environment:
      OTEL_SERVICE_NAME: "client-service"
      OTEL_RESOURCE_ATTRIBUTES: "service=client-service,env=dev"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4317"
      # Logs are disabled by default
      OTEL_LOGS_EXPORTER: "otlp"
    ports:
      - "8081:8080"
    depends_on:
      - collector
      - server-service

  collector:
    container_name: collector
    image: otel/opentelemetry-collector-contrib:0.91.0
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./docker/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    restart: always
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "8889" # Prometheus exporter metrics
    depends_on:
      - loki
      - tempo

  tempo:
    container_name: tempo
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yml
    restart: always
    ports:
      - "4317"  # otlp grpc
      - "3200"  # tempo as grafana datasource

  loki:
    container_name: loki
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    restart: always
    ports:
      - "3100"

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=exemplar-storage
      - --web.enable-remote-write-receiver
    restart: always
    ports:
      - '9090:9090'
    depends_on:
      - collector

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./docker/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
      - tempo
